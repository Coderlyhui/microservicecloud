# application.yml 是用户级的资源配置
# bootstrap.yml 是系统级的资源配置，优先级更高
# spring cloud会创建一个'Bootstrap Context'，
#   作为spring应用的'Application Context'的父上下文。初始化的时候，'Bootstrap Context'
#   负责从外部源加载配置属性 并解析配置。这两个上下文共享一个从外部获取的'Environment'。
#   'Bootstrap'属性有高优先级，默认情况下，他们不会被本地配置覆盖。
#   'Bootstrap Context'和'Application Context'有着不同的约定，
#   所以新增一个'bootstrap.yml'文件，
#   保证'Bootstrap Context'和'Application Context'配置的分离。

spring:
  cloud:
    config:
      name: microservicecloud-config-client #从github上读取的资源名，不含yml后缀
      profile: test  # 本次访问的配置项
      label: master
      uri: http://config-3344.com:3344 # 本微服务启动后先去找3344服务，通过Spring Cloud Config获取GitHub上的服务地址